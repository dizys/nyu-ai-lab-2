#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
BNF to CNF converter and DPLL solver
by Ziyang Zeng (zz2960)
Spring 2022
"""

import argparse
from solving import DPLL, text_to_cnf_rep


def main():
    """
    Main function
    """
    parser = argparse.ArgumentParser(
        description="A BNF to CNF converter and DPLL solver.")
    # for N queens problem
    parser.add_argument(
        "-v", "--verbose", help="verbose output", action="store_true", default=False)
    # for Knapsack problem
    parser.add_argument(
        "-m", "--mode", help='solver mode, should be one of "cnf", "dpll" or "solver"', required=True)
    parser.add_argument(
        "inputfile", help="input file path")
    args = parser.parse_args()

    try:
        with open(args.inputfile, 'r') as f:
            input_text = f.read()
    except FileNotFoundError:
        print(f"Error: No such file or directory at {args.inputfile}")
        exit(1)

    args.mode = args.mode.lower()

    if args.mode == "cnf":
        pass
    elif args.mode == "dpll":
        cnf_rep = text_to_cnf_rep(input_text)
        dpll = DPLL(cnf_rep, verbose=args.verbose)
        if not dpll.solve():
            print("NO VALID ASSIGNMENT")
        else:
            dpll.fill_unbounded_atoms()
            dpll.print_bounds()
    elif args.mode == "solver":
        pass
    else:
        print(f"Error: Invalid mode {args.mode}")
        exit(1)


if __name__ == '__main__':
    main()
